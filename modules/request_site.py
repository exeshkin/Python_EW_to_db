import requests
from bs4 import BeautifulSoup


# Параграфы исключения
# Используются только ключи, значения ключей для справки
except_paragraphs = {
    "58-1221E": [
        29, "И такой обман является этой неправильной вещью. Теперь, ложь, если она является просто прямой ложью, тогда каждый может её распознать. Но та ложь, которая содержит около 99 процентов правды, это тот один, который вводит в заблуждение.",
    ],
    "59-1231'": [
        62, "Нам теперь сказали через пророчество, что завтра ночью или в воскресенье ночью...Тот же человек, который предсказал о Перл-Харбор [Военно-морская база США на Гавайских островах. 7 декабря 1941 года японская авиация нанесла внезапный удар по Перл-Харбор и вывела из строя основные силы американского Тихоокеанского флота-Пер.], с точностью до того момента, когда самолёты будут бомбардировать его, сказал, что: 'В воскресенье ночью в 12 часов, что 75 процентов жителей Америки превратятся в пепел, что Россия будет бомбардировать США в эту предстоящую воскресную ночь в 12 часов'. Тот же человек, который предсказал о Перл-Харбор. Они не собираются запускать это, потому что люди доходят до безумия. Я не верю этому. Понимаете? Нет. Потому что пока это не может пострадать от атомной войны. Одна из них [Бомба-Пер.] полетит вот так, преодолев звуковой барьер, мы же запустим их вот так, и весь мир развалиться на кусочки. Нечто, однако же, должно произойти, прежде чем придёт Иисус. Это верно.",
    ],
    "60-0611E": [
        4, "Так вот, теперь — самое время. Самое время воззвать к шестому чувству. Самое время принять Бога. Самое время положиться на Дух веры, который Бог вложил в вас. < br > Так вот, если это люди, которых долго учили против этого, тогда трудно. Брат Бозe говорил мне сегодня: 'Брат Бранхам, я никогда не осознавал, с чем вы сталкиваетесь'. Понимаете? Вы не понимаете, что это такое, как трудно, когда доносишь… И сила Божья сойдет настолько реально для людей, что они смотрят и видят движущийся и действующий среди людей Дух, а некоторые будут сидеть там и говорить: 'О-о, если бы только вы сделали то или это, или то, или что-то другое, то это может быть помогло бы мне'. < br > О-о, брат, если бы это шестое чувство смогло понять, о чем мы проповедовали на этой неделе(аминь), что Святой Дух…Бог дал это обетование. Христос дал это обетование. Мы пропустили его через Писания на этой неделе и прочесывали его туда и сюда и, туда и сюда, пока не узнали, что Бог обещал делать то, что Он делает сегодня — сверхъестественное. Так вот, по-настоящему подлинная вера увидела бы это и ухватилась бы за это, и все бесы ада ни за что не оттащили бы его оттуда. < br > Но мы на этом претыкаемся. Оно недостаточно используется. Мы очень сильно зависим от этих пяти. И когда…в большинстве случаев, 95 процентов людей или больше, когда видят, что с пятью чувствами покончено: 'Ну, все потеряно. Ройте мне могилу, готовьте мне гроб'. Понимаете?",
    ],
    "62-0601": [
        77, "Вот что, я чувствую, нам следует делать здесь в настоящее время... Я верю, что нам нужна церковь. Я думаю — я думаю, что Дом Божий... Вы скажете: 'Хорошо, что... вкладывать в неё все деньги, когда Господь вот-вот собирается прийти?' Ну, а какая польза хранить эти деньги, если Господь придёт? Видите? И если люди так сделали — предназначили эти деньги для церкви, то наш долг (при 100 процентах голосования, которое я провёл здесь в тот вечер) – построить церковь: тогда стройте её! Я сказал бы, строить её! Так точно!",
    ],
    "62-0704'": [
        46, "Теперь, мне хотелось бы сказать сейчас, немного побеседовать официально в течение нескольких минут, для основания и подоплёки. Мы начнём как бы о Божественном исцелении. И всегда, Иисус, я верю, в Своём служении, около восьмидесяти процентов его, это было о Божественном исцелении.<br>И как мой старый хороший друг, Брат Босворт, которого многие из Христиан знали, он, бывало, говорил: 'Всегда, чтобы поймать рыбу, ты им не показываешь крючок, ты показываешь им наживку. И рыба хватает наживку и попадается на крючок'.",
    ],
    "62-1124E": [
        41, "'О, — говорите вы, — Я пошёл туда, и там было много силы. Брат, весь зал танцевал в Духе!' И недостаточно веры, чтобы исцелить от зубной боли. Вы называете это силой? Это не сила. Это благословения. Есть много различий между благословениями и силой. Бог благословляет праведных и неправедных. Солнце сияет и... Понимаете? Мы должны вернуться к истине, друзья. Мы должны вернуться к тому, что Бог имеет в виду. Что Он говорит, то Он и имеет в виду. Понимаете? И Он отверг их... Однажды Он скрыл Своё лицо от их молитв..."
    ],
    "64-0305": [
        195, "Возьмите свои карточки. Мы будем молиться за всех. Человек, получивший карточку, уже здоров на 60 процентов. Он знает, что попадет в ряд, поэтому у него появляется надежда. Поэтому мы раздаем карточки.",
    ],
    "65-0221M'": [
        123, "И…прямо из Чикаго, женщина с полицейскими написала статью, о том, что они обнаружили. В Соединенных Штатах (в столичных Соединенных Штатах) в 98 процентах всех преступлений, которые когда-либо были совершены в любой форме в Соединенных Штатах, была женщина, или непосредственно в них, или стояла за ними. Вот, и я говорю все это для того, чтобы добраться до одной вещи здесь в конце, чтобы вы могли понять в чем дело.",
    ],
}


def fill_table_list_sermon(cnx, cursor):
    # Запрос страницы
    url = 'https://branham.pro/sermons'
    page = requests.get(url)

    # Создание объекта soup
    soup = BeautifulSoup(page.content, 'html.parser')

    # Поиск блока со списком проповедей
    block_sermons = soup.find(class_='table')

    # Получение всех строк
    trs = block_sermons.find_all('tr', class_="my-2")

    # Список строк для передачи в таблицу
    sermons_rows = []
    # Список всех дат
    list_dates = []

    # Перебор всех строк
    for tr in trs:
        # Получение всех ссылок из строки
        all_links = tr.select('a')

        # Получение даты
        date_site = tr.select_one('span:nth-of-type(1)').text
        # Проверка имеется ли текущая дата в предыдущих строках
        if date_site in list_dates:
            date = date_site.replace(' *', "''")
        else:
            date = date_site.replace(' *', "'")
        # Добавление даты в список
        list_dates.append(date_site)

        # Получение имени проповеди
        name = tr.select_one('a:nth-of-type(1)').text
        # Получение перевода проповеди
        translate = tr.select_one('td:nth-of-type(4)').text
        # Получение ссылки на проповедь
        link_sermon = all_links[0]['href']
        # Получение ссылки на pdf
        link_pdf = all_links[1]['href']

        # Получение ссылки на mp3, если такая имеется
        if len(all_links) == 3:
            link_mp3 = all_links[2]['href']
        else:
            link_mp3 = '-'

        # Формирование строки
        row = (date, name, translate, link_sermon,
               link_pdf, link_mp3)
        # Добавление строки в список строк
        sermons_rows.append(row)

    # SQL-запрос заполнение таблицы
    query = "INSERT INTO sermons_list (date, name, translate, link_sermon, link_pdf, link_mp3) VALUES (%s, %s, %s, %s, %s, %s)"

    # Перебрать все полученные строки и записать в таблицу
    for row in sermons_rows:
        cursor.execute(query, row)

    # Коммит
    cnx.commit()


def add_exceptions_in_table_sermons_content(cnx, cursor):
    # Отправка и получение запроса
    cursor.execute(
        "SELECT date, quote_num, quote FROM sermons_content_except_static")
    rows_table_sermons_list = cursor.fetchall()

    # Перебор всех строк из запроса
    for row in rows_table_sermons_list:
        # SQL-запрос заполнение таблицы
        query = "INSERT INTO sermons_content (date, quote_num, quote) VALUES (%s, %s, %s)"

        # Перебрать все полученные строки и записать в таблицу
        cursor.execute(query, (row[0], row[1], row[2]))

    # Коммит
    cnx.commit()


def fill_tables(cnx, cursor):
    # Список проповедей исключений
    list_date_except_sermons = list(except_paragraphs.keys())

    # Отправка и получение запроса
    cursor.execute("SELECT date, link_sermon FROM sermons_list")
    rows_table_sermons_list = cursor.fetchall()

    # Перебор всех строк из запроса
    for row in rows_table_sermons_list:
        # Дата и ссылка текущей строки
        date = row[0]
        url = f'https://branham.pro{row[1]}'

        # Если проповедь в исключениях, то пропустить
        if date in list_date_except_sermons:
            continue

        # Запрос страницы
        page = requests.get(url)

        # Создание объекта soup
        soup = BeautifulSoup(page.content, 'html.parser')

        # Поиск всех строк проповеди
        text_all = soup.find_all(class_='tdbranh')

        current_sermons_content = []

        # Перебрать все строки проповеди
        for num in range(len(text_all)):
            # Получить номер параграфа и отформатировать
            quote_num_txt = text_all[num].select_one(
                f'span:nth-of-type(1)').text
            quote_num = quote_num_txt.replace('E-', '').strip()

            # print(f'{date} - {quote_num}')

            # Получить цитату из строки
            quote = text_all[num].select_one(f'span:nth-of-type(2)').text

            # Формирование строки
            row_sermon = (date, quote_num, quote)
            # Добавление строки в список строк
            current_sermons_content.append(row_sermon)

        # SQL-запрос заполнение таблицы sermons_list
        query_content = "INSERT INTO sermons_list (date, quote_num, quote) VALUES (%s, %s, %s)"

        # SQL-запрос заполнение таблицы sermons_content
        query_content = "INSERT INTO sermons_content (date, quote_num, quote) VALUES (%s, %s, %s)"

        # Перебрать все полученные строки и записать в таблицу
        for row_sermon in current_sermons_content:
            cursor.execute(query_content, row_sermon)

        # Коммит
        cnx.commit()

    add_exceptions_in_table_sermons_content(cnx, cursor)


if __name__ == '__main__':
    print('Модуль с набором функций. Отдельно не запускать!')
